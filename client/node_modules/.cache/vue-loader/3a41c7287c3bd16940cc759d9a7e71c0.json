{"remainingRequest":"/Users/jakobbach/Documents/bzmining/client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/jakobbach/Documents/bzmining/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/jakobbach/Documents/bzmining/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jakobbach/Documents/bzmining/client/src/components/exams.vue?vue&type=template&id=7399de54&","dependencies":[{"path":"/Users/jakobbach/Documents/bzmining/client/src/components/exams.vue","mtime":1589405879181},{"path":"/Users/jakobbach/Documents/bzmining/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jakobbach/Documents/bzmining/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/jakobbach/Documents/bzmining/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jakobbach/Documents/bzmining/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}